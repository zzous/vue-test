{"remainingRequest":"D:\\ddan\\kb\\sptek_vue_template_v1.5\\sptek_vue_template_1.5_pub\\node_modules\\babel-loader\\lib\\index.js!D:\\ddan\\kb\\sptek_vue_template_v1.5\\sptek_vue_template_1.5_pub\\src\\store\\modules\\user\\actions.js","dependencies":[{"path":"D:\\ddan\\kb\\sptek_vue_template_v1.5\\sptek_vue_template_1.5_pub\\src\\store\\modules\\user\\actions.js","mtime":1591865419002},{"path":"D:\\ddan\\kb\\sptek_vue_template_v1.5\\sptek_vue_template_1.5_pub\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1572588422475},{"path":"D:\\ddan\\kb\\sptek_vue_template_v1.5\\sptek_vue_template_1.5_pub\\node_modules\\babel-loader\\lib\\index.js","mtime":1586157842868}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiRDovZGRhbi9rYi9zcHRla192dWVfdGVtcGxhdGVfdjEuNS9zcHRla192dWVfdGVtcGxhdGVfMS41X3B1Yi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJEOi9kZGFuL2tiL3NwdGVrX3Z1ZV90ZW1wbGF0ZV92MS41L3NwdGVrX3Z1ZV90ZW1wbGF0ZV8xLjVfcHViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBfYWN0aW9uVHlwZXMkQVNZTkNfTE87CgppbXBvcnQgeyBsb2dpbiB9IGZyb20gIkAvYXBpL3VzZXJBcGkiOwppbXBvcnQgeyBnZXRVc2VySW5mbyB9IGZyb20gIkAvYXBpL3VzZXJBcGkiOwppbXBvcnQgeyBnZXRVc2VyTGlzdCB9IGZyb20gIkAvYXBpL3VzZXJBcGkiOwppbXBvcnQgKiBhcyBtdXRhdGlvbnMgZnJvbSAiLi9tdXRhdGlvbnMiOwppbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tICIuL3R5cGUiOwpleHBvcnQgZGVmYXVsdCAoX2FjdGlvblR5cGVzJEFTWU5DX0xPID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9uVHlwZXMkQVNZTkNfTE8sIGFjdGlvblR5cGVzLkFTWU5DX0xPR0lOLCBmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIHBhcmFtcykgewogICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHN0YXRlLCByb290U3RhdGUsIHJvb3RHZXR0ZXJzLCBzdWNjZXNzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLCBzdGF0ZSA9IF9yZWYuc3RhdGUsIHJvb3RTdGF0ZSA9IF9yZWYucm9vdFN0YXRlLCByb290R2V0dGVycyA9IF9yZWYucm9vdEdldHRlcnM7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICBjb21taXQobXV0YXRpb25zLkxPR0lOX1BFTkRJTkcpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIGxvZ2luKHBhcmFtcyk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBzdWNjZXNzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7CiAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9ucy5MT0dJTl9TVUNDRVNTKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICBjb21taXQobXV0YXRpb25zLkxPR0lOX0ZBSUxVUkUsIF9jb250ZXh0LnQwKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgZGlzcGF0Y2goYWN0aW9uVHlwZXMuR0VUX1VTRVJfSU5GTywgcGFyYW1zLnVzZXJJZCk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDldXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIpIHsKICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9uVHlwZXMkQVNZTkNfTE8sIGFjdGlvblR5cGVzLkdFVF9VU0VSX0lORk8sIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYzLCB1c2VySWQpIHsKICAgIHZhciBjb21taXQsIGRpc3BhdGNoLCBzdGF0ZSwgcm9vdFN0YXRlLCByb290R2V0dGVycywgdXNlckluZm87CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQsIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2gsIHN0YXRlID0gX3JlZjMuc3RhdGUsIHJvb3RTdGF0ZSA9IF9yZWYzLnJvb3RTdGF0ZSwgcm9vdEdldHRlcnMgPSBfcmVmMy5yb290R2V0dGVyczsKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICBjb21taXQobXV0YXRpb25zLlVTRVJfSU5GT19QRU5ESU5HKTsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gZ2V0VXNlckluZm8odXNlcklkKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHVzZXJJbmZvID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBpZiAodXNlckluZm8pIHsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25zLlVTRVJfSU5GT19TVUNDRVNTLCB1c2VySW5mbyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDEwOwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvbnMuVVNFUl9JTkZPX0ZBSUxVUkUsIF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxMF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gzLCBfeDQpIHsKICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9uVHlwZXMkQVNZTkNfTE8sIGFjdGlvblR5cGVzLkdFVF9VU0VSX0xJU1QsIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKF9yZWY1LCB1c2VySWQpIHsKICAgIHZhciBjb21taXQsIGRpc3BhdGNoLCBzdGF0ZSwgcm9vdFN0YXRlLCByb290R2V0dGVycywgdXNlckxpc3Q7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmNS5jb21taXQsIGRpc3BhdGNoID0gX3JlZjUuZGlzcGF0Y2gsIHN0YXRlID0gX3JlZjUuc3RhdGUsIHJvb3RTdGF0ZSA9IF9yZWY1LnJvb3RTdGF0ZSwgcm9vdEdldHRlcnMgPSBfcmVmNS5yb290R2V0dGVyczsKICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICBjb21taXQobXV0YXRpb25zLlVTRVJfTElTVF9QRU5ESU5HKTsKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gZ2V0VXNlckxpc3QoKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIHVzZXJMaXN0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICBpZiAodXNlckxpc3QpIHsKICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25zLlVTRVJfTElTVF9TVUNDRVNTLCB1c2VyTGlzdCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCB0cnVlKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDEwOwogICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvbnMuVVNFUl9MSVNUX0ZBSUxVUkUsIF9jb250ZXh0My50MCk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1sxLCAxMF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g1LCBfeDYpIHsKICAgIHJldHVybiBfcmVmNi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9uVHlwZXMkQVNZTkNfTE8sICJ0ZXN0MTEiLCBmdW5jdGlvbiB0ZXN0MTEoX3JlZjcpIHsKICB2YXIgZGlzcGF0Y2ggPSBfcmVmNy5kaXNwYXRjaDsKICBjb25zb2xlLmxvZygidGVzdDEgc3RhcnQiKTsKICBjb25zb2xlLmxvZygidGVzdDIgc3RhcnQiKTsKICBkaXNwYXRjaCgidGVzdDEyIik7CiAgY29uc29sZS5sb2coInRlc3QyIGVuZCIpOwogIGNvbnNvbGUubG9nKCJ0ZXN0MyBzdGFydCIpOwogIGRpc3BhdGNoKCJ0ZXN0MTMiKTsKICBjb25zb2xlLmxvZygidGVzdDMgZW5kIik7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvblR5cGVzJEFTWU5DX0xPLCAidGVzdDEyIiwgZnVuY3Rpb24gdGVzdDEyKCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBjb25zb2xlLmxvZygiX19fIDEyIik7CiAgICByZXNvbHZlKHRydWUpOwogIH0pOwp9KSwgX2RlZmluZVByb3BlcnR5KF9hY3Rpb25UeXBlcyRBU1lOQ19MTywgInRlc3QxMyIsIGZ1bmN0aW9uIHRlc3QxMygpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgY29uc29sZS5sb2coIl9fXyAxMyIpOwogICAgcmVzb2x2ZSh0cnVlKTsKICB9KTsKfSksIF9hY3Rpb25UeXBlcyRBU1lOQ19MTyk7"},{"version":3,"sources":["D:/ddan/kb/sptek_vue_template_v1.5/sptek_vue_template_1.5_pub/src/store/modules/user/actions.js"],"names":["login","getUserInfo","getUserList","mutations","actionTypes","ASYNC_LOGIN","params","commit","dispatch","state","rootState","rootGetters","LOGIN_PENDING","success","LOGIN_SUCCESS","LOGIN_FAILURE","GET_USER_INFO","userId","USER_INFO_PENDING","userInfo","USER_INFO_SUCCESS","USER_INFO_FAILURE","GET_USER_LIST","USER_LIST_PENDING","userList","USER_LIST_SUCCESS","USER_LIST_FAILURE","console","log","Promise","resolve","reject"],"mappings":";;;;;;;AAAA,SAASA,KAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,QAA7B;AACA,mFACEA,WAAW,CAACC,WADd;AAAA,sEAC4B,uBAE1BC,MAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,MADwB,QACxBA,MADwB,EAChBC,QADgB,QAChBA,QADgB,EACNC,KADM,QACNA,KADM,EACCC,SADD,QACCA,SADD,EACYC,WADZ,QACYA,WADZ;AAAA;AAKzBJ,YAAAA,MAAM,CAACJ,SAAS,CAACS,aAAX,CAAN;AALyB;AAAA,mBAMLZ,KAAK,CAACM,MAAD,CANA;;AAAA;AAMrBO,YAAAA,OANqB;;AAOzB,gBAAIA,OAAJ,EAAa;AACZN,cAAAA,MAAM,CAACJ,SAAS,CAACW,aAAX,CAAN;AACA;;AATwB;AAAA;;AAAA;AAAA;AAAA;AAWzBP,YAAAA,MAAM,CAACJ,SAAS,CAACY,aAAX,cAAN;AAXyB;;AAAA;AAe1BP,YAAAA,QAAQ,CAACJ,WAAW,CAACY,aAAb,EAA4BV,MAAM,CAACW,MAAnC,CAAR;;AAf0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAD5B;;AAAA;AAAA;AAAA;AAAA,6CAmBEb,WAAW,CAACY,aAnBd;AAAA,sEAmB8B,yBAE5BC,MAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BV,YAAAA,MAD0B,SAC1BA,MAD0B,EAClBC,QADkB,SAClBA,QADkB,EACRC,KADQ,SACRA,KADQ,EACDC,SADC,SACDA,SADC,EACUC,WADV,SACUA,WADV;AAAA;AAK3BJ,YAAAA,MAAM,CAACJ,SAAS,CAACe,iBAAX,CAAN;AAL2B;AAAA,mBAMNjB,WAAW,CAACgB,MAAD,CANL;;AAAA;AAMvBE,YAAAA,QANuB;;AAO3B,gBAAIA,QAAJ,EAAc;AACbZ,cAAAA,MAAM,CAACJ,SAAS,CAACiB,iBAAX,EAA8BD,QAA9B,CAAN;AACA;;AAT0B,8CAUpB,IAVoB;;AAAA;AAAA;AAAA;AAY3BZ,YAAAA,MAAM,CAACJ,SAAS,CAACkB,iBAAX,eAAN;;AAZ2B;AAAA,8CAerB,KAfqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAnB9B;;AAAA;AAAA;AAAA;AAAA,6CAoCEjB,WAAW,CAACkB,aApCd;AAAA,sEAoC8B,yBAE5BL,MAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BV,YAAAA,MAD0B,SAC1BA,MAD0B,EAClBC,QADkB,SAClBA,QADkB,EACRC,KADQ,SACRA,KADQ,EACDC,SADC,SACDA,SADC,EACUC,WADV,SACUA,WADV;AAAA;AAK3BJ,YAAAA,MAAM,CAACJ,SAAS,CAACoB,iBAAX,CAAN;AAL2B;AAAA,mBAMNrB,WAAW,EANL;;AAAA;AAMvBsB,YAAAA,QANuB;;AAO3B,gBAAIA,QAAJ,EAAc;AACbjB,cAAAA,MAAM,CAACJ,SAAS,CAACsB,iBAAX,EAA8BD,QAA9B,CAAN;AACA;;AAT0B,8CAUpB,IAVoB;;AAAA;AAAA;AAAA;AAY3BjB,YAAAA,MAAM,CAACJ,SAAS,CAACuB,iBAAX,eAAN;;AAZ2B;AAAA,8CAerB,KAfqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GApC9B;;AAAA;AAAA;AAAA;AAAA,6CAsDE,QAtDF,EAsDa,uBAAgB;AAAA,MAAdlB,QAAc,SAAdA,QAAc;AAC3BmB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACApB,EAAAA,QAAQ,CAAC,QAAD,CAAR;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACApB,EAAAA,QAAQ,CAAC,QAAD,CAAR;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,CA9DF,0CAgEE,QAhEF,EAgEa,kBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAEtCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAE,IAAAA,OAAO,CAAC,IAAD,CAAP;AAED,GALM,CAAP;AAMA,CAvEF,0CAwEE,QAxEF,EAwEa,kBAAM;AACjB,SAAO,IAAID,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHM,CAAP;AAIA,CA7EF","sourcesContent":["import { login } from \"@/api/userApi\";\r\nimport { getUserInfo } from \"@/api/userApi\";\r\nimport { getUserList } from \"@/api/userApi\";\r\nimport * as mutations from \"./mutations\";\r\nimport * as actionTypes from \"./type\";\r\nexport default {\r\n\t[actionTypes.ASYNC_LOGIN]: async (\r\n\t\t{ commit, dispatch, state, rootState, rootGetters },\r\n\t\tparams\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tcommit(mutations.LOGIN_PENDING);\r\n\t\t\tlet success = await login(params);\r\n\t\t\tif (success) {\t\t\t\t\r\n\t\t\t\tcommit(mutations.LOGIN_SUCCESS);\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tcommit(mutations.LOGIN_FAILURE, error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tdispatch(actionTypes.GET_USER_INFO, params.userId);\r\n\t},\r\n\r\n\t[actionTypes.GET_USER_INFO]: async (\r\n\t\t{ commit, dispatch, state, rootState, rootGetters },\r\n\t\tuserId\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tcommit(mutations.USER_INFO_PENDING);\r\n\t\t\tlet userInfo = await getUserInfo(userId);\r\n\t\t\tif (userInfo) {\r\n\t\t\t\tcommit(mutations.USER_INFO_SUCCESS, userInfo);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tcommit(mutations.USER_INFO_FAILURE, error);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\t[actionTypes.GET_USER_LIST]: async (\r\n\t\t{ commit, dispatch, state, rootState, rootGetters },\r\n\t\tuserId\r\n\t) => {\r\n\t\ttry {\r\n\t\t\tcommit(mutations.USER_LIST_PENDING);\r\n\t\t\tlet userList = await getUserList();\r\n\t\t\tif (userList) {\r\n\t\t\t\tcommit(mutations.USER_LIST_SUCCESS, userList);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tcommit(mutations.USER_LIST_FAILURE, error);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t[\"test11\"]: ({dispatch}) => {\r\n\t\tconsole.log(\"test1 start\");\r\n\t\tconsole.log(\"test2 start\");\r\n\t\tdispatch(\"test12\");\r\n\t\tconsole.log(\"test2 end\");\r\n\t\tconsole.log(\"test3 start\");\r\n\t\tdispatch(\"test13\");\r\n\t\tconsole.log(\"test3 end\");\r\n\t},\r\n\r\n\t[\"test12\"]: () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\r\n\t\t\t\tconsole.log(\"___ 12\")\r\n\t\t\t\tresolve(true)\t\r\n\t\t\t\r\n\t\t})\r\n\t},\r\n\t[\"test13\"]: () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tconsole.log(\"___ 13\")\r\n\t\t\t\tresolve(true)\t\r\n\t\t})\r\n\t}\r\n\r\n\r\n};\r\n"]}]}